<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<script>
function loadXMLDoc()
{
	var xmlhttp;
	if (window.XMLHttpRequest)
	{
		//  IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码，支持XMLHttpRequest对象
		xmlhttp=new XMLHttpRequest();
	}
	else
	{
		// IE6, IE5 浏览器执行代码 不支持XMLHttpRequest对象，则创建ActiveXObject（老版本ie）
		xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");
	}
	xmlhttp.onreadystatechange=function()
	{
		if (xmlhttp.readyState==4 && xmlhttp.status==200)
		{
			document.getElementById("myDiv").innerHTML=xmlhttp.responseText;
		}
	}
	xmlhttp.open("GET","/try/ajax/ajax_info.txt",true);
	xmlhttp.send();
}
</script>
</head>
<body>

<div id="myDiv"><h2>使用 AJAX 修改该文本内容</h2></div>
<button type="button" onclick="loadXMLDoc()">修改内容</button>

</body>
</html>

XMLHttpRequest 对象用于和服务器交换数据。
	使用open()和send（）方法；

open(method,url/filename,async):请求的类型，url以及是否异步处理请求
	
	method:请求类型；get 或 post
	url:文件在服务器上的位置
	async：true(异步)或false（同步）



send(string): 将请求发送到服务器

	string:仅用于POST请求


get与post：
	与post相比，get更简单更快，大部分情况下可使用。
	
	以下情况下只能使用post请求：
		无法使用缓存文件（更新服务器上的文件或数据库）
		向服务器发送大量数据（post没有数据量限制）
		发送包含未知字符的用户输入时，POST比GET更稳定也更可靠



当使用 async=true 时，应规定在响应处于 onreadystatechange 事件中的就绪状态时执行的函数：

	xmlhttp.onreadystatechange=function()
	{
   		 if (xmlhttp.readyState==4 && xmlhttp.status==200)
    		{
       			 document.getElementById("myDiv").innerHTML=xmlhttp.responseText;
    		}
	}
	xmlhttp.open("GET","/try/ajax/ajax_info.txt",true);
	xmlhttp.send();


如需使用 async=false，请将 open() 方法中的第三个参数改为 false：

	当您使用 async=false 时，不需编写 onreadystatechange 函数 - 把代码放到 send() 语句后面即可：

		xmlhttp.open("GET","/try/ajax/ajax_info.txt",false);
		xmlhttp.send();
		document.getElementById("myDiv").innerHTML=xmlhttp.responseText;

ajax服务器响应：
	
	使用 XMLHttpRequest 对象的 responseText 或 responseXML 属性获取来自服务器的响应。

	responseText：字符串形式相应数据

	responseXML：XML形式响应数据

responseXML：请求解析XML文件

	xmlDoc=xmlhttp.responseXML;
	txt="";
	x=xmlDoc.getElementsByTagName("ARTIST");
	for (i=0;i<x.length;i++)
	{
    		txt=txt + x[i].childNodes[0].nodeValue + "<br>";
	}
	document.getElementById("myDiv").innerHTML=txt;


onreadystatechange 事件 

当请求被发送到服务器时，我们需要执行一些基于响应的任务。

每当 readyState 改变时，就会触发 onreadystatechange 事件。

readyState 属性存有 XMLHttpRequest 的状态信息。

	重要属性：
		onreadystatechange  存储函数（函数名），每当readyState改变时，就会调用该函数

		readyState  存有XMLHttpRequest状态  0到4
				0：请求未初始化
				1：服务器连接已建立
				2：请求已接收
				3：请求处理中
				4：请求已完成，且响应已就绪

		status   200：“OK”
			 404：未找到页面





















	
	